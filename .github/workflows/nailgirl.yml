name: nailgirl

on:
  push:
    paths:
      - 'nailgirl/**'

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./nailgirl/Builds/VisualStudio2019/nailgirl.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  mac:
    name: Build and analyse default scheme using xcodebuild command
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
      - name: Build
        env:
          scheme: ${{ 'default' }}
        run: |
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\nailgirl.xcodeproj\$`"; fi
          #just give it the path here, right?
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild clean build analyze -scheme "$scheme" -"$filetype_parameter" "$file_to_build" | xcpretty && exit ${PIPESTATUS[0]}
      - name: save artifact
        uses: actions/upload-artifact@v3
        with:
          name: nailgirl-mac
          path: nailgirl\Builds\MacOSX

  win:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: add msbuild to path
      uses: microsoft/setup-msbuild@v1.1

    - name: build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
      
    - name: ziptie..
      shell: bash
      run: 7z a -tzip nailgirl.zip -r nailgirl/Builds/VisualStudio2019/x64/Release

    - name: save artifact
      uses: actions/upload-artifact@v3
      with:
        name: nailgirl-win
        path: nailgirl\Builds\VisualStudio2019

        #- name: release
        #  uses: "marvinpinto/action-automatic-releases@latest"
        #  with:
        #    repo_token: "${{ secrets.GITHUB_TOKEN }}"
        #    automatic_release_tag: "nailgirl"
        #    prerelease: false
        #    title: "nailgirl"
        #    files: |
        #      nailgirl/Builds/VisualStudio2019/x64/Release/VST3/nailgirl.vst3
        #      nailgirl.zip


