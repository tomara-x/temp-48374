name: nailgirl

on:
  push:
    paths:
      - 'nailgirl/**'
      - '.github/workflows/nailgirl.yml' #testing

jobs:
  mac:
    runs-on: macos-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: set default scheme
        run: |
          cd nailgirl/Builds/MacOSX
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
      - name: build
        env:
          scheme: ${{ 'default' }}
        run: |
          cd nailgirl/Builds/MacOSX
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild clean build -scheme "$scheme" -"$filetype_parameter" "$file_to_build" | xcpretty && exit ${PIPESTATUS[0]}
      - name: save artifact
        uses: actions/upload-artifact@v3
        with:
          name: nailgirl-mac
          path: |
            nailgirl/Builds/MacOSX/build/Release
            nailgirl/Builds/MacOSX/build/Release/nailgirl.vst3/Contents/MacOS/nailgirl

  win:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: add msbuild to path
      uses: microsoft/setup-msbuild@v1.1

    - name: build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=Release nailgirl/Builds/VisualStudio2019/nailgirl.sln
      
     #- name: ziptie..
     #  shell: bash
     #  run: 7z a -tzip nailgirl.zip -r nailgirl/Builds/VisualStudio2019/x64/Release

    - name: save artifacts
      uses: actions/upload-artifact@v3
      with:
        name: nailgirl-win
        path: |
          nailgirl\Builds\VisualStudio2019
          nailgirl\Builds\VisualStudio2019\x64\Release\VST3\nailgirl.vst3

        #- name: release
        #  uses: "marvinpinto/action-automatic-releases@latest"
        #  with:
        #    repo_token: "${{ secrets.GITHUB_TOKEN }}"
        #    automatic_release_tag: "nailgirl"
        #    prerelease: false
        #    title: "nailgirl"
        #    files: |
        #      nailgirl/Builds/VisualStudio2019/x64/Release/VST3/nailgirl.vst3
        #      nailgirl.zip

  release:
    runs-on: ubuntu-latest
    needs: [mac, win]
    steps:
      - uses: actions/download-artifact@3
      - name: list
        run: |
          ls -laR
      #svenstaro/upload-release-action
